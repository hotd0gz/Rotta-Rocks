{"ast":null,"code":"var _jsxFileName = \"/Users/sm00th-swagger/porfolio-site/src/Components/MailForm.js\";\nimport React from 'react';\nimport socketIO from 'socket.io-client';\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nlet io;\n\nif (localStorage.getItem('userID')) {\n  console.log(localStorage.getItem('userID'));\n  io = socketIO('localhost:8080', {\n    transportOptions: {\n      polling: {\n        extraHeaders: {\n          'Authorization': \"Bearer \".concat(localStorage.getItem('userID'))\n        }\n      }\n    }\n  });\n} else {\n  console.log('else');\n  io = socketIO('localhost:8080');\n}\n\nexport default class MailForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.styles = {\n      mainDiv: {\n        'text-align': 'center'\n      },\n      area: {\n        width: '100px',\n        height: '100px'\n      },\n      text: {\n        'font-size': '25px'\n      }\n    };\n\n    this.sendState = e => {\n      if (localStorage.userID === null || localStorage.userID === undefined) {\n        console.log('swag');\n        io.emit('session.new', {\n          userContent: {\n            first_name: e.target[0].value,\n            last_name: e.target[1].value,\n            email: e.target[2].value,\n            subject: e.target[3].value,\n            message: e.target[4].value\n          }\n        }, response => {\n          console.log(\"users id: \".concat(response));\n          io = socketIO('localhost:8080', {\n            transportOptions: {\n              polling: {\n                extraHeaders: {\n                  'Authorization': \"Bearer \".concat(response)\n                }\n              }\n            }\n          });\n          localStorage.setItem('userID', response);\n        });\n      } else {\n        return null;\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(Form, {\n      style: this.styles.mainDiv,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"contactName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Name\"), React.createElement(Input, {\n      type: \"name\",\n      name: \"name\",\n      id: \"contactName\",\n      placeholder: \"with a placeholder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"contactEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      id: \"contactName\",\n      placeholder: \"password placeholder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"contactSubject\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Subject\"), React.createElement(Input, {\n      type: \"subject\",\n      name: \"subject\",\n      id: \"contactSubject\",\n      placeholder: \"password placeholder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"contactMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Message\"), React.createElement(Input, {\n      type: \"message\",\n      name: \"message\",\n      id: \"contactMessage\",\n      placeholder: \"password placeholder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/sm00th-swagger/porfolio-site/src/Components/MailForm.js"],"names":["React","socketIO","Button","Form","FormGroup","Label","Input","FormText","io","localStorage","getItem","console","log","transportOptions","polling","extraHeaders","MailForm","Component","styles","mainDiv","area","width","height","text","sendState","e","userID","undefined","emit","userContent","first_name","target","value","last_name","email","subject","message","response","setItem","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport socketIO from 'socket.io-client'\nimport { Button, Form, FormGroup, Label, Input, FormText,  } from 'reactstrap';\n\nlet io;\nif(localStorage.getItem('userID')){\n    console.log(localStorage.getItem('userID'))\n    io = socketIO('localhost:8080', {\n        transportOptions: {\n            polling: {\n            extraHeaders: {\n                'Authorization': `Bearer ${localStorage.getItem('userID')}`\n            }\n            }\n        }\n    })\n} else {\n    console.log('else')\n    io = socketIO('localhost:8080')\n}\n\n\nexport default class MailForm extends React.Component {\n\n\n    styles = {\n        mainDiv: {\n            'text-align': 'center'\n        },\n        area: {\n            width: '100px',\n            height: '100px'\n        },\n        text: {\n            'font-size': '25px'\n        }\n    }\n\n\n    sendState = (e) => {\n\n        if(localStorage.userID === null || localStorage.userID === undefined) {\n            console.log('swag')\n            io.emit('session.new', {userContent: {\n                first_name: e.target[0].value,\n                last_name: e.target[1].value,\n                email: e.target[2].value,\n                subject: e.target[3].value,\n                message: e.target[4].value\n            }}, response => {\n                console.log(`users id: ${response}`)\n                io = socketIO('localhost:8080', {\n                    transportOptions: {\n                        polling: {\n                        extraHeaders: {\n                            'Authorization': `Bearer ${response}`\n                        }\n                        }\n                    }\n                })\n                localStorage.setItem('userID', response)\n            })\n        } else {\n            return null\n        }\n    }\n\n\n    render() {\n        return (\n\n            <Form style={this.styles.mainDiv}>\n                <FormGroup>\n                    <Label for=\"contactName\">Name</Label>\n                    <Input type=\"name\" name=\"name\" id=\"contactName\" placeholder=\"with a placeholder\" />\n                </FormGroup>\n                <FormGroup>\n                    <Label for=\"contactEmail\">Email</Label>\n                    <Input type=\"email\" name=\"email\" id=\"contactName\" placeholder=\"password placeholder\" />\n                </FormGroup>\n                <FormGroup>\n                    <Label for=\"contactSubject\">Subject</Label>\n                    <Input type=\"subject\" name=\"subject\" id=\"contactSubject\" placeholder=\"password placeholder\" />\n                </FormGroup>\n                <FormGroup>\n                    <Label for=\"contactMessage\">Message</Label>\n                    <Input type=\"message\" name=\"message\" id=\"contactMessage\" placeholder=\"password placeholder\" />\n                </FormGroup>\n            \n            </Form>\n\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}